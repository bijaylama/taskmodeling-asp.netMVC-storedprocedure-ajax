@model TaskProject.Models.TaskModel



@using (Html.BeginForm("Create", "Task", FormMethod.Post, new { id = "createForm" }))

{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TaskModel</h4>
        <hr />
        @Html.ValidationSummary(true)

        
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.TaskBody, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaskBody)
                @Html.ValidationMessageFor(model => model.TaskBody)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpireDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.TextBoxFor(model => model.ExpireDate, new { @Type = "date", @Value = Model.ExpireDate })
                @Html.ValidationMessageFor(model => model.ExpireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*     PRIORITY DROPDOWN     *@

        

        <div class="form-group">
            @Html.LabelFor(model => model.PriorityID, "Priority", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               
                @Html.DropDownListFor(model => model.PriorityID, Model.priorities, "Select Priority")
                @Html.ValidationMessageFor(model => model.PriorityID, "", new { @class = "text-danger" })


            </div>
        </div>

        @*     CATEGORY DROPDOWN     *@




        <div class="form-group">
            @Html.LabelFor(model => model.TaskCatID, "Category", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<select class="" id="TaskCatID" name="TaskCatID">
                    <option>Select Category</option>
                    @foreach (System.Data.DataRow dr in Model.ListCategory.Rows)
                    {

                        <option value="@dr["TaskCatID"]">@dr["TCName"]</option>
                    }
                </select>*@
                @Html.DropDownListFor(model => model.TaskCatID, Model.categories, "Select category")

                @Html.ValidationMessageFor(model => model.TaskCatID, "", new { @class = "text-danger" })






            </div>
        </div>


        @*     USER DROPDOWN     *@

        <div class="form-group">
            @Html.LabelFor(model => model.UserID, "User", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserID, Model.users, "Select User")

                
                @Html.ValidationMessageFor(model => model.UserID)


            </div>
        </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

                    <button type="button" onclick="saveTaskCreate()" class="btn btn-success">SAVE</button>
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery.validate.js"></script>

<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>





